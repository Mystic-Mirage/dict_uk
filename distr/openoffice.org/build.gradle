import org.apache.tools.ant.filters.ReplaceTokens

version=new File("${projectDir}/../../VERSION").text.trim()
def hunspellDir="${projectDir}/../hunspell/build/hunspell"

def subname = project.hasProperty("full") ? "_full" : ""

println "Version: $version"

task prepareFiles {

  doLast() {
    copy {
        from "$hunspellDir/$subname/uk_UA.aff"
        from "$hunspellDir/$subname/uk_UA.dic"
        from "thesaurus"
        from "hyphen"
        from "spell"
        into "build/oxt/uk_UA"
    }

    copy {
	    from "meta-oxt/META-INF"
	    into "build/oxt/META-INF"
	}
	
    copy {
	    from "../LICENSE"
	    from "meta-oxt/dictionaries.xcu"
	    from "meta-oxt/downloadplaces.txt"
	    from "meta-oxt/icon64.png"
	    from("meta-oxt/description.xml") {
            filter(ReplaceTokens, tokens: [VERSION: project.version])
        }
	    into "build/oxt"
    }
    
    exec {
        commandLine 'sh', '-c', "bin/th_gen_idx.pl < thesaurus/th_uk_UA.dat > build/oxt/uk_UA/th_uk_UA.idx"
    }
  }
}

task oxt (type: Zip, dependsOn: prepareFiles) {
    from 'build/oxt'
    archiveBaseName = "dict-uk_UA$subname-${project.version}"
    archiveExtension = "oxt"
    destinationDirectory = file("build")
}


//	mkdir -p $(OXT_DIST)
//	cp -r src/openoffice.org/* $(OXT_DIST)
//	$(UPDATE_VERSION) < src/openoffice.org/description.xml > $(OXT_DIST)/description.xml
//	cp $(MYSPELL_DIST)/uk_UA.aff $(OXT_DIST)/uk_UA/
//	cp $(MYSPELL_DIST)/uk_UA.dic $(OXT_DIST)/uk_UA/
//	cp src/myspell/README_uk_UA.txt $(OXT_DIST)/uk_UA/
//	cp src/thesaurus/th_uk_UA.dat $(OXT_DIST)/uk_UA/
//	bin/th_gen_idx.pl < src/thesaurus/th_uk_UA.dat > $(OXT_DIST)/uk_UA/th_uk_UA.idx
//	-rm *.oxt
//	cd $(OXT_DIST) && zip -r ../dict-uk_UA-$(VERSION).oxt * && cd ..
